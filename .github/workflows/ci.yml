name: CI - Code Quality & Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  code-quality:
    name: Check Code Quality & Build
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # 3. Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    # 4. Install frontend dependencies
    - name: Install frontend dependencies
      run: npm run install:frontend

    # 5. Install backend dependencies
    - name: Install backend dependencies
      run: |
        npm run install:backend
        npm run install:backend-dev

    # 6. Frontend lint & format check
    - name: Frontend Lint & Format
      run: |
        npm run lint:frontend
        npm run format:frontend:check

    # 7. Backend lint & format check
    - name: Backend Lint & Format
      run: |
        npm run lint:backend
        npm run format:backend:check

    # 8. Backend type check (mypy)
    - name: Backend Type Check
      run: npm run lint:backend

    # 9. Frontend type check (TypeScript)
    - name: Frontend Type Check
      run: |
        if [ -f darukaa-frontend/tsconfig.json ]; then npx tsc --noEmit -p darukaa-frontend; else echo "Skipping TS check"; fi

    # 10. Backend security check (Bandit)
    - name: Backend Security Check
      run: |
        if command -v bandit &> /dev/null; then bandit -r daruka-backend; else echo "Skipping Bandit"; fi

    # 11. Frontend build check
    - name: Frontend Build
      run: npm run build:frontend
